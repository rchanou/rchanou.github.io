<?php

require_once(app_path().'/tools/vendors/PHPExcel.php');

class Exports
{
    private function __construct() { }
    private static $initialized = false;

    private static function initialize()
    {
        if (self::$initialized) return;

        self::$initialized = true;
    }

    public static function toIIF($data, $filename)
    {
        self::initialize();

				// Build the export file...
				$export  = "!TRNS,TRNSID,TRNSTYPE,DATE,NUMB,ACCNT,CLASS,AMOUNT,DOCNUM,MEMO\r\n";
				$export .= "!SPL,SPLID,TRNSTYPE,DATE,NUMB,ACCNT,CLASS,AMOUNT,DOCNUM,MEMO\r\n";
				$export .= "!ENDTRNS,,,,,,,,,\r\n";

				foreach($data['data'] as $key => $val) {
					$Date_Format = array_key_exists('Date_Format', $val) ? $val['Date_Format'] : 'm/d/Y';

					$sor    = ($key === 0) ? 'TRNS' : 'SPL';
					$date   = date($Date_Format, strtotime($data['options']['start']));
					$class  = array_key_exists('Class', $val) ? $val['Class'] : '';
					$amount = ($val['Debit'] == '.00' ? $val['Credit'] : $val['Debit']);
					$docnum = str_replace('-', '', $data['options']['start']);

					$export .= "{$sor},,GENERAL JOURNAL,{$date},,{$val['AccountNumber']},{$class},{$amount},{$docnum},{$val['Description']}\r\n";
				};
				
				$export .= "ENDTRNS,,,,,,,,,\r\n";

				// Send file for download...				
				header("Content-disposition: attachment; filename={$filename}_{$data['options']['start']}-{$data['options']['end']}.iif");
				header('Content-type: text/plain');
				echo $export;
		}
		
		public static function toSAGE($data, $filename)
    {
        self::initialize();

				/*
				// SAMPLE SAGE
				Type,Bank,Date,Ref,Dept,Nominal,Details,Net,Tax Code,VAT,Gross
				BR,1205,14/06/2015,Ext,1,4000,External Karting,189.58,T1,37.92,227.5
				CR,1203,14/06/2015,Cash,1,4010,Cash CafÈ,13,T1,2.6,15.6
				BR,1235,14/06/2015,Paypal,1,4100,Paypal Combat,200,T1,40,240
				BR,1200,14/06/2015,Cheque,1,4000,Cheque Karting,316.66,T1,63.34,380
				BR,1255,14/06/2015,Voucher,1,4050,Voucher Sundry,41.66,T1,8.34,50
				BR,1205,14/06/2015,Ext,1,1013,External Gift Voucher,25,T0,0,25'
				*/
				
				$export  = "Type,Bank,Date,Ref,Dept,Nominal,Details,Net,Tax Code,VAT,Gross\r\n";
				
				foreach($data['data'] as $key => $val) {

					// Can override the format of the date
					$Date_Format     = array_key_exists('Date_Format', $val) ? $val['Date_Format'] : 'd/m/Y';

					$row = array();
					$row['Type']     = array_key_exists('Type', $val) ? $val['Type'] : '';
					$row['Bank']     = array_key_exists('Bank', $val) ? $val['Bank'] : '';
					$row['Date']     = array_key_exists('Date', $val) ? $val['Date'] : date($Date_Format, strtotime($data['options']['start']));
					$row['Ref']      = array_key_exists('Ref', $val) ? $val['Ref'] : '';
					$row['Dept']     = array_key_exists('Dept', $val) ? $val['Dept'] : '';
					$row['Nominal']  = array_key_exists('Nominal', $val) ? $val['Nominal'] : $val['AccountNumber'];
					$row['Details']  = array_key_exists('Details', $val) ? $val['Details'] : $val['Description'];
					$row['Net']      = array_key_exists('Net', $val) ? $val['Net'] : '';
					$row['Tax_Code'] = array_key_exists('Tax_Code', $val) ? $val['Tax_Code'] : '';
					$row['VAT']      = array_key_exists('VAT', $val) ? $val['VAT'] : '';
					$row['Gross']    = $val['Debit'] == '.00' ? (-1 * $val['Credit']) : $val['Debit'];

					$export .= implode(',', $row) . "\r\n";
				};

				// Send file for download...				
				header("Content-disposition: attachment; filename={$filename}_{$data['options']['start']}-{$data['options']['end']}.csv");
				header('Content-type: text/csv');
				echo $export;
				
		}
				
		public static function toCSV($data, $filename)
    {
        self::initialize();

        //Determine the labels for the first row by examining the first item's keys
        $headerRow = array();
        if (count($data) > 0)
        {
            $firstItem = $data[0];
            foreach($firstItem as $columnName => $columnValue)
            {
                $headerRow[] = $columnName;
            }
        }

        // Create a new PHPExcel object
        $objPHPExcel = new PHPExcel();

        // Set document properties
        $objPHPExcel->getProperties()->setCreator("Club Speed")
            ->setLastModifiedBy("Club Speed")
            ->setTitle("Payments Report")
            ->setSubject("Payments Report")
            ->setDescription("A Payments Report generated by the Club Speed Admin Panel")
            ->setKeywords("Club Speed Payments Report")
            ->setCategory("Payments Report");

        // Set the active sheet
        $objPHPExcel->setActiveSheetIndex(0); //TODO: Set sheet title?

        $currentRowNumber = 1; //The first row is the header row
        $currentColumnNumber = 0;
        $columnLetters = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','AA','AB','AC','AD','AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AS','AT','AU','AV','AW','AX','AY','AZ','BA','BB','BC','BD','BE','BF','BG','BH','BI','BJ','BK','BL','BM','BN','BO','BP','BQ','BR','BS','BT','BU','BV','BW','BX','BY','BZ','CA','CB','CC','CD','CE','CF','CG','CH','CI','CJ','CK','CL','CM','CN','CO','CP','CQ','CR','CS','CT','CU','CV','CW','CX','CY','CZ','DA','DB','DC','DD','DE','DF','DG','DH','DI','DJ','DK','DL','DM','DN','DO','DP','DQ','DR','DS','DT','DU','DV','DW','DX','DY','DZ','EA','EB','EC','ED','EE','EF','EG','EH','EI','EJ','EK','EL','EM','EN','EO','EP','EQ','ER','ES','ET','EU','EV','EW','EX','EY','EZ','FA','FB','FC','FD','FE','FF','FG','FH','FI','FJ','FK','FL','FM','FN','FO','FP','FQ','FR','FS','FT','FU','FV','FW','FX','FY','FZ','GA','GB','GC','GD','GE','GF','GG','GH','GI','GJ','GK','GL','GM','GN','GO','GP','GQ','GR','GS','GT','GU','GV','GW','GX','GY','GZ','HA','HB','HC','HD','HE','HF','HG','HH','HI','HJ','HK','HL','HM','HN','HO','HP','HQ','HR','HS','HT','HU','HV','HW','HX','HY','HZ','IA','IB','IC','ID','IE','IF','IG','IH','II','IJ','IK','IL','IM','IN','IO','IP','IQ','IR','IS','IT','IU','IV','IW','IX','IY','IZ','JA','JB','JC','JD','JE','JF','JG','JH','JI','JJ','JK','JL','JM','JN','JO','JP','JQ','JR','JS','JT','JU','JV','JW','JX','JY','JZ','KA','KB','KC','KD','KE','KF','KG','KH','KI','KJ','KK','KL','KM','KN','KO','KP','KQ','KR','KS','KT','KU','KV','KW','KX','KY','KZ','LA','LB','LC','LD','LE','LF','LG','LH','LI','LJ','LK','LL','LM','LN','LO','LP','LQ','LR','LS','LT','LU','LV','LW','LX','LY','LZ','MA','MB','MC','MD','ME','MF','MG','MH','MI','MJ','MK','ML','MM','MN','MO','MP','MQ','MR','MS','MT','MU','MV','MW','MX','MY','MZ',
            'NA','NB','NC','ND','NE','NF','NG','NH','NI','NJ','NK','NL','NM','NN','NO','NP','NQ','NR','NS','NT','NU','NV','NW','NX','NY','NZ','OA','OB','OC','OD','OE','OF','OG','OH','OI','OJ','OK','OL','OM','ON','OO','OP','OQ','OR','OS','OT','OU','OV','OW','OX','OY','OZ','PA','PB','PC','PD','PE','PF','PG','PH','PI','PJ','PK','PL','PM','PN','PO','PP','PQ','PR','PS','PT','PU','PV','PW','PX','PY','PZ','QA','QB','QC','QD','QE','QF','QG','QH','QI','QJ','QK','QL','QM','QN','QO','QP','QQ','QR','QS','QT','QU','QV','QW','QX','QY','QZ','RA','RB','RC','RD','RE','RF','RG','RH','RI','RJ','RK','RL','RM','RN','RO','RP','RQ','RR','RS','RT','RU','RV','RW','RX','RY','RZ','SA','SB','SC','SD','SE','SF','SG','SH','SI','SJ','SK','SL','SM','SN','SO','SP','SQ','SR','SS','ST','SU','SV','SW','SX','SY','SZ','TA','TB','TC','TD','TE','TF','TG','TH','TI','TJ','TK','TL','TM','TN','TO','TP','TQ','TR','TS','TT','TU','TV','TW','TX','TY','TZ','UA','UB','UC','UD','UE','UF','UG','UH','UI','UJ','UK','UL','UM','UN','UO','UP','UQ','UR','US','UT','UU','UV','UW','UX','UY','UZ','VA','VB','VC','VD','VE','VF','VG','VH','VI','VJ','VK','VL','VM','VN','VO','VP','VQ','VR','VS','VT','VU','VV','VW','VX','VY','VZ','WA','WB','WC','WD','WE','WF','WG','WH','WI','WJ','WK','WL','WM','WN','WO','WP','WQ','WR','WS','WT','WU','WV','WW','WX','WY','WZ','XA','XB','XC','XD','XE','XF','XG','XH','XI','XJ','XK','XL','XM','XN','XO','XP','XQ','XR','XS','XT','XU','XV','XW','XX','XY','XZ','YA','YB','YC','YD','YE','YF','YG','YH','YI','YJ','YK','YL','YM','YN','YO','YP','YQ','YR','YS','YT','YU','YV','YW','YX','YY','YZ','ZA','ZB','ZC','ZD','ZE','ZF','ZG','ZH','ZI','ZJ','ZK','ZL','ZM','ZN','ZO','ZP','ZQ','ZR','ZS','ZT','ZU','ZV','ZW','ZX','ZY','ZZ'
        ); //The first several column names in Excel - it's very odd that PHPExcel requires column names explicitly to write to! We generate the cell (Ex. "A3") ourselves as we iterate.


        foreach($headerRow as $currentColumn) //Write the header columns to the excel file
        {
            $objPHPExcel->getActiveSheet()->setCellValue($columnLetters[$currentColumnNumber] . $currentRowNumber, $currentColumn); //"A1" gets the first item in the header, "A2" gets the second, etc.
            $currentColumnNumber++;
        }
        $currentRowNumber++;

        //Write the rest of the data to the excel file
        foreach($data as $currentRow)
        {
            $currentColumnNumber = 0;
            foreach($currentRow as $currentCellData)
            {
                $objPHPExcel->getActiveSheet()->setCellValue($columnLetters[$currentColumnNumber] . $currentRowNumber, $currentCellData);
                $currentColumnNumber++;
            }
            $currentRowNumber++;
        }

        $timestamp = date('Ymd-His'); //Used for filename

        // Redirect file output to a client’s web browser (CSV)
        header('Content-Type: text/csv');
        header('Content-Disposition: attachment;filename="' . $filename . ' - ' . $timestamp . '.csv"');
        header('Cache-Control: max-age=0');

        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'CSV')->setDelimiter(',')
            ->setEnclosure('"')
            ->setLineEnding("\r\n")
            ->setSheetIndex(0);

        $objWriter->save('php://output');
    }
} 